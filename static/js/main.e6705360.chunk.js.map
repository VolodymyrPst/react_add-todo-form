{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","App","useState","userValue","setUserValue","todoTitle","setTodoTitle","titleError","setTitleError","userError","setUserError","className","action","method","onSubmit","event","preventDefault","todosFromServer","push","length","htmlFor","type","value","placeholder","onClick","onChange","e","target","disabled","usersFromServer","map","user","curentUser","find","classNames","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6705360.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [userValue, setUserValue] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const idCreator = () => todosFromServer.length + 1;\n\n  const createToDo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (!userValue) {\n      setUserError(true);\n\n      return;\n    }\n\n    todosFromServer.push({\n      id: idCreator(),\n      title: todoTitle,\n      completed: false,\n      userId: userValue,\n    });\n\n    setUserValue(0);\n    setTodoTitle('');\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={createToDo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={todoTitle}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onClick={() => setTitleError(false)}\n            onChange={e => setTodoTitle(e.target.value)}\n          />\n          { titleError && <span className=\"error\">Please enter a title</span> }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User:</label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={userValue}\n            onClick={() => setUserError(false)}\n            onChange={e => setUserValue(+e.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map((user) => {\n                return (\n                  <option value={user.id}>{user.name}</option>\n                );\n              })\n            }\n          </select>\n          { userError && <span className=\"error\">Please choose a user</span> }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {\n          todosFromServer.map(({\n            id,\n            title,\n            completed,\n            userId,\n          }) => {\n            const curentUser = usersFromServer.find(\n              (user) => user.id === userId,\n            );\n\n            return (\n              <article\n                key={id}\n                data-id={id}\n                className={\n                  classNames('TodoInfo', { 'TodoInfo--completed': completed })\n                }\n              >\n                <h2 className=\"TodoInfo__title\">\n                  {title}\n                </h2>\n\n                <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n                  {curentUser?.name}\n                </a>\n              </article>\n            );\n          })\n        }\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}