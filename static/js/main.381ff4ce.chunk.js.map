{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","App","_useState","useState","todosFromServer","_useState2","_slicedToArray","todos","setTodos","_useState3","_useState4","userValue","setUserValue","_useState5","_useState6","todoTitle","setTodoTitle","_useState7","_useState8","titleError","setTitleError","_useState9","_useState10","userError","setUserError","_jsxs","className","children","_jsx","action","method","onSubmit","event","preventDefault","newTodo","v4","concat","_toConsumableArray","htmlFor","type","value","placeholder","onChange","e","target","disabled","usersFromServer","map","user","_ref","curentUser","find","classNames","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.381ff4ce.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [userValue, setUserValue] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const idCreator = () => v4();\n\n  const createToDo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!todoTitle) {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (!userValue) {\n      setUserError(true);\n\n      return;\n    }\n\n    const newTodo = {\n      id: +idCreator(),\n      title: todoTitle,\n      completed: false,\n      userId: userValue,\n    };\n\n    setTodos(() => [...todos, newTodo]);\n\n    setUserValue(0);\n    setTodoTitle('');\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={createToDo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={todoTitle}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={e => {\n              setTitleError(false);\n              setTodoTitle(e.target.value);\n            }}\n          />\n          { titleError && <span className=\"error\">Please enter a title</span> }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User:</label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={userValue}\n            onChange={e => {\n              setUserError(false);\n              setUserValue(+e.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map((user) => {\n                return (\n                  <option key={user.id} value={user.id}>{user.name}</option>\n                );\n              })\n            }\n          </select>\n          { userError && <span className=\"error\">Please choose a user</span> }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {\n          todos.map(({\n            id,\n            title,\n            completed,\n            userId,\n          }) => {\n            const curentUser = usersFromServer.find(\n              (user) => user.id === userId,\n            );\n\n            return (\n              <article\n                key={id}\n                data-id={id}\n                className={\n                  classNames('TodoInfo', { 'TodoInfo--completed': completed })\n                }\n              >\n                <h2 className=\"TodoInfo__title\">\n                  {title}\n                </h2>\n\n                <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n                  {curentUser?.name}\n                </a>\n              </article>\n            );\n          })\n        }\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}